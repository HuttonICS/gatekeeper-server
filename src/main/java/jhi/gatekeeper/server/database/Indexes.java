/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database;


import jhi.gatekeeper.server.database.tables.AccessRequests;
import jhi.gatekeeper.server.database.tables.PasswordResetLog;
import jhi.gatekeeper.server.database.tables.SchemaVersion;
import jhi.gatekeeper.server.database.tables.UserHasAccessToDatabases;
import jhi.gatekeeper.server.database.tables.Users;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables in gatekeeper_db.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ACCESS_REQUESTS_ACCESS_REQUESTS_IBFK1 = Internal.createIndex(DSL.name("access_requests_ibfk1"), AccessRequests.ACCESS_REQUESTS, new OrderField[] { AccessRequests.ACCESS_REQUESTS.USER_ID }, false);
    public static final Index ACCESS_REQUESTS_ACCESS_REQUESTS_IBFK2 = Internal.createIndex(DSL.name("access_requests_ibfk2"), AccessRequests.ACCESS_REQUESTS, new OrderField[] { AccessRequests.ACCESS_REQUESTS.DATABASE_SYSTEM_ID }, false);
    public static final Index USER_HAS_ACCESS_TO_DATABASES_FK_USERS_HAS_ACCESS_TO_DATABASES_USER_TYPES1_IDX = Internal.createIndex(DSL.name("fk_users_has_access_to_databases_user_types1_idx"), UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES, new OrderField[] { UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES.USER_TYPE_ID }, false);
    public static final Index USER_HAS_ACCESS_TO_DATABASES_FK_USERS_HAS_DATABASES_DATABASES1_IDX = Internal.createIndex(DSL.name("fk_users_has_databases_databases1_idx"), UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES, new OrderField[] { UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES.DATABASE_ID }, false);
    public static final Index USER_HAS_ACCESS_TO_DATABASES_FK_USERS_HAS_DATABASES_USERS1_IDX = Internal.createIndex(DSL.name("fk_users_has_databases_users1_idx"), UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES, new OrderField[] { UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES.USER_ID }, false);
    public static final Index USERS_FK_USERS_INSTITUTIONS1_IDX = Internal.createIndex(DSL.name("fk_users_institutions1_idx"), Users.USERS, new OrderField[] { Users.USERS.INSTITUTION_ID }, false);
    public static final Index SCHEMA_VERSION_SCHEMA_VERSION_S_IDX = Internal.createIndex(DSL.name("schema_version_s_idx"), SchemaVersion.SCHEMA_VERSION, new OrderField[] { SchemaVersion.SCHEMA_VERSION.SUCCESS }, false);
    public static final Index PASSWORD_RESET_LOG_USER_ID_USERS_USER_ID_IDX = Internal.createIndex(DSL.name("user_id_users_user_id_idx"), PasswordResetLog.PASSWORD_RESET_LOG, new OrderField[] { PasswordResetLog.PASSWORD_RESET_LOG.USER_ID }, false);
}
