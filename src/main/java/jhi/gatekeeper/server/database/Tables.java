/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database;


import jhi.gatekeeper.server.database.tables.AccessRequests;
import jhi.gatekeeper.server.database.tables.DatabaseSystems;
import jhi.gatekeeper.server.database.tables.Institutions;
import jhi.gatekeeper.server.database.tables.PasswordResetLog;
import jhi.gatekeeper.server.database.tables.SchemaVersion;
import jhi.gatekeeper.server.database.tables.UnapprovedUsers;
import jhi.gatekeeper.server.database.tables.UserHasAccessToDatabases;
import jhi.gatekeeper.server.database.tables.UserTypes;
import jhi.gatekeeper.server.database.tables.Users;
import jhi.gatekeeper.server.database.tables.ViewAccessRequestUserDetails;
import jhi.gatekeeper.server.database.tables.ViewCounts;
import jhi.gatekeeper.server.database.tables.ViewUnapprovedUserDetails;
import jhi.gatekeeper.server.database.tables.ViewUserDetails;
import jhi.gatekeeper.server.database.tables.ViewUserPermissions;


/**
 * Convenience access to all tables in gatekeeper_db.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>gatekeeper_db.access_requests</code>.
     */
    public static final AccessRequests ACCESS_REQUESTS = AccessRequests.ACCESS_REQUESTS;

    /**
     * The table <code>gatekeeper_db.database_systems</code>.
     */
    public static final DatabaseSystems DATABASE_SYSTEMS = DatabaseSystems.DATABASE_SYSTEMS;

    /**
     * The table <code>gatekeeper_db.institutions</code>.
     */
    public static final Institutions INSTITUTIONS = Institutions.INSTITUTIONS;

    /**
     * Log table of password reset requests.
     */
    public static final PasswordResetLog PASSWORD_RESET_LOG = PasswordResetLog.PASSWORD_RESET_LOG;

    /**
     * The table <code>gatekeeper_db.schema_version</code>.
     */
    public static final SchemaVersion SCHEMA_VERSION = SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>gatekeeper_db.unapproved_users</code>.
     */
    public static final UnapprovedUsers UNAPPROVED_USERS = UnapprovedUsers.UNAPPROVED_USERS;

    /**
     * The table <code>gatekeeper_db.user_has_access_to_databases</code>.
     */
    public static final UserHasAccessToDatabases USER_HAS_ACCESS_TO_DATABASES = UserHasAccessToDatabases.USER_HAS_ACCESS_TO_DATABASES;

    /**
     * The table <code>gatekeeper_db.user_types</code>.
     */
    public static final UserTypes USER_TYPES = UserTypes.USER_TYPES;

    /**
     * The table <code>gatekeeper_db.users</code>.
     */
    public static final Users USERS = Users.USERS;

    /**
     * VIEW
     */
    public static final ViewAccessRequestUserDetails VIEW_ACCESS_REQUEST_USER_DETAILS = ViewAccessRequestUserDetails.VIEW_ACCESS_REQUEST_USER_DETAILS;

    /**
     * VIEW
     */
    public static final ViewCounts VIEW_COUNTS = ViewCounts.VIEW_COUNTS;

    /**
     * VIEW
     */
    public static final ViewUnapprovedUserDetails VIEW_UNAPPROVED_USER_DETAILS = ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS;

    /**
     * VIEW
     */
    public static final ViewUserDetails VIEW_USER_DETAILS = ViewUserDetails.VIEW_USER_DETAILS;

    /**
     * VIEW
     */
    public static final ViewUserPermissions VIEW_USER_PERMISSIONS = ViewUserPermissions.VIEW_USER_PERMISSIONS;
}
