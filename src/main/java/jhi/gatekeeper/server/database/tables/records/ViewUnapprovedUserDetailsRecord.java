/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database.tables.records;


import java.sql.Timestamp;

import jhi.gatekeeper.server.database.tables.ViewUnapprovedUserDetails;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewUnapprovedUserDetailsRecord extends TableRecordImpl<ViewUnapprovedUserDetailsRecord> implements Record14<Integer, String, String, String, Timestamp, Integer, String, String, String, String, String, Byte, Byte, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gatekeeper_db.view_unapproved_user_details.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gatekeeper_db.view_unapproved_user_details.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.full_name</code>.
     */
    public void setFullName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.full_name</code>.
     */
    public String getFullName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.email_address</code>.
     */
    public void setEmailAddress(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.email_address</code>.
     */
    public String getEmailAddress() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.institution_id</code>.
     */
    public void setInstitutionId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.institution_id</code>.
     */
    public Integer getInstitutionId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>gatekeeper_db.view_unapproved_user_details.name</code>.
     */
    public void setName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>gatekeeper_db.view_unapproved_user_details.name</code>.
     */
    public String getName() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.acronym</code>.
     */
    public void setAcronym(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.acronym</code>.
     */
    public String getAcronym() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.address</code>.
     */
    public void setAddress(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.address</code>.
     */
    public String getAddress() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.database_system_name</code>.
     */
    public void setDatabaseSystemName(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.database_system_name</code>.
     */
    public String getDatabaseSystemName() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.database_server_name</code>.
     */
    public void setDatabaseServerName(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.database_server_name</code>.
     */
    public String getDatabaseServerName() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.has_been_rejected</code>.
     */
    public void setHasBeenRejected(Byte value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.has_been_rejected</code>.
     */
    public Byte getHasBeenRejected() {
        return (Byte) get(11);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.needs_approval</code>.
     */
    public void setNeedsApproval(Byte value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.needs_approval</code>.
     */
    public Byte getNeedsApproval() {
        return (Byte) get(12);
    }

    /**
     * Setter for
     * <code>gatekeeper_db.view_unapproved_user_details.activation_key</code>.
     */
    public void setActivationKey(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>gatekeeper_db.view_unapproved_user_details.activation_key</code>.
     */
    public String getActivationKey() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, String, Timestamp, Integer, String, String, String, String, String, Byte, Byte, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, String, Timestamp, Integer, String, String, String, String, String, Byte, Byte, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.ID;
    }

    @Override
    public Field<String> field2() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.FULL_NAME;
    }

    @Override
    public Field<String> field4() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.EMAIL_ADDRESS;
    }

    @Override
    public Field<Timestamp> field5() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.CREATED_ON;
    }

    @Override
    public Field<Integer> field6() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.INSTITUTION_ID;
    }

    @Override
    public Field<String> field7() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.NAME;
    }

    @Override
    public Field<String> field8() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.ACRONYM;
    }

    @Override
    public Field<String> field9() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.ADDRESS;
    }

    @Override
    public Field<String> field10() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.DATABASE_SYSTEM_NAME;
    }

    @Override
    public Field<String> field11() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.DATABASE_SERVER_NAME;
    }

    @Override
    public Field<Byte> field12() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.HAS_BEEN_REJECTED;
    }

    @Override
    public Field<Byte> field13() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.NEEDS_APPROVAL;
    }

    @Override
    public Field<String> field14() {
        return ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS.ACTIVATION_KEY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getFullName();
    }

    @Override
    public String component4() {
        return getEmailAddress();
    }

    @Override
    public Timestamp component5() {
        return getCreatedOn();
    }

    @Override
    public Integer component6() {
        return getInstitutionId();
    }

    @Override
    public String component7() {
        return getName();
    }

    @Override
    public String component8() {
        return getAcronym();
    }

    @Override
    public String component9() {
        return getAddress();
    }

    @Override
    public String component10() {
        return getDatabaseSystemName();
    }

    @Override
    public String component11() {
        return getDatabaseServerName();
    }

    @Override
    public Byte component12() {
        return getHasBeenRejected();
    }

    @Override
    public Byte component13() {
        return getNeedsApproval();
    }

    @Override
    public String component14() {
        return getActivationKey();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getFullName();
    }

    @Override
    public String value4() {
        return getEmailAddress();
    }

    @Override
    public Timestamp value5() {
        return getCreatedOn();
    }

    @Override
    public Integer value6() {
        return getInstitutionId();
    }

    @Override
    public String value7() {
        return getName();
    }

    @Override
    public String value8() {
        return getAcronym();
    }

    @Override
    public String value9() {
        return getAddress();
    }

    @Override
    public String value10() {
        return getDatabaseSystemName();
    }

    @Override
    public String value11() {
        return getDatabaseServerName();
    }

    @Override
    public Byte value12() {
        return getHasBeenRejected();
    }

    @Override
    public Byte value13() {
        return getNeedsApproval();
    }

    @Override
    public String value14() {
        return getActivationKey();
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value3(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value4(String value) {
        setEmailAddress(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value5(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value6(Integer value) {
        setInstitutionId(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value7(String value) {
        setName(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value8(String value) {
        setAcronym(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value9(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value10(String value) {
        setDatabaseSystemName(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value11(String value) {
        setDatabaseServerName(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value12(Byte value) {
        setHasBeenRejected(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value13(Byte value) {
        setNeedsApproval(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord value14(String value) {
        setActivationKey(value);
        return this;
    }

    @Override
    public ViewUnapprovedUserDetailsRecord values(Integer value1, String value2, String value3, String value4, Timestamp value5, Integer value6, String value7, String value8, String value9, String value10, String value11, Byte value12, Byte value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewUnapprovedUserDetailsRecord
     */
    public ViewUnapprovedUserDetailsRecord() {
        super(ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS);
    }

    /**
     * Create a detached, initialised ViewUnapprovedUserDetailsRecord
     */
    public ViewUnapprovedUserDetailsRecord(Integer id, String username, String fullName, String emailAddress, Timestamp createdOn, Integer institutionId, String name, String acronym, String address, String databaseSystemName, String databaseServerName, Byte hasBeenRejected, Byte needsApproval, String activationKey) {
        super(ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS);

        setId(id);
        setUsername(username);
        setFullName(fullName);
        setEmailAddress(emailAddress);
        setCreatedOn(createdOn);
        setInstitutionId(institutionId);
        setName(name);
        setAcronym(acronym);
        setAddress(address);
        setDatabaseSystemName(databaseSystemName);
        setDatabaseServerName(databaseServerName);
        setHasBeenRejected(hasBeenRejected);
        setNeedsApproval(needsApproval);
        setActivationKey(activationKey);
    }

    /**
     * Create a detached, initialised ViewUnapprovedUserDetailsRecord
     */
    public ViewUnapprovedUserDetailsRecord(jhi.gatekeeper.server.database.tables.pojos.ViewUnapprovedUserDetails value) {
        super(ViewUnapprovedUserDetails.VIEW_UNAPPROVED_USER_DETAILS);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setFullName(value.getFullName());
            setEmailAddress(value.getEmailAddress());
            setCreatedOn(value.getCreatedOn());
            setInstitutionId(value.getInstitutionId());
            setName(value.getName());
            setAcronym(value.getAcronym());
            setAddress(value.getAddress());
            setDatabaseSystemName(value.getDatabaseSystemName());
            setDatabaseServerName(value.getDatabaseServerName());
            setHasBeenRejected(value.getHasBeenRejected());
            setNeedsApproval(value.getNeedsApproval());
            setActivationKey(value.getActivationKey());
        }
    }
}
