/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccessRequests implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private Integer   userId;
    private Integer   databaseSystemId;
    private Byte      hasBeenRejected;
    private Byte      needsApproval;
    private String    activationKey;
    private Timestamp createdOn;

    public AccessRequests() {}

    public AccessRequests(AccessRequests value) {
        this.id = value.id;
        this.userId = value.userId;
        this.databaseSystemId = value.databaseSystemId;
        this.hasBeenRejected = value.hasBeenRejected;
        this.needsApproval = value.needsApproval;
        this.activationKey = value.activationKey;
        this.createdOn = value.createdOn;
    }

    public AccessRequests(
        Integer   id,
        Integer   userId,
        Integer   databaseSystemId,
        Byte      hasBeenRejected,
        Byte      needsApproval,
        String    activationKey,
        Timestamp createdOn
    ) {
        this.id = id;
        this.userId = userId;
        this.databaseSystemId = databaseSystemId;
        this.hasBeenRejected = hasBeenRejected;
        this.needsApproval = needsApproval;
        this.activationKey = activationKey;
        this.createdOn = createdOn;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.user_id</code>.
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.database_system_id</code>.
     */
    public Integer getDatabaseSystemId() {
        return this.databaseSystemId;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.database_system_id</code>.
     */
    public void setDatabaseSystemId(Integer databaseSystemId) {
        this.databaseSystemId = databaseSystemId;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.has_been_rejected</code>.
     */
    public Byte getHasBeenRejected() {
        return this.hasBeenRejected;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.has_been_rejected</code>.
     */
    public void setHasBeenRejected(Byte hasBeenRejected) {
        this.hasBeenRejected = hasBeenRejected;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.needs_approval</code>.
     */
    public Byte getNeedsApproval() {
        return this.needsApproval;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.needs_approval</code>.
     */
    public void setNeedsApproval(Byte needsApproval) {
        this.needsApproval = needsApproval;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.activation_key</code>.
     */
    public String getActivationKey() {
        return this.activationKey;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.activation_key</code>.
     */
    public void setActivationKey(String activationKey) {
        this.activationKey = activationKey;
    }

    /**
     * Getter for <code>gatekeeper_db.access_requests.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>gatekeeper_db.access_requests.created_on</code>.
     */
    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccessRequests (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(databaseSystemId);
        sb.append(", ").append(hasBeenRejected);
        sb.append(", ").append(needsApproval);
        sb.append(", ").append(activationKey);
        sb.append(", ").append(createdOn);

        sb.append(")");
        return sb.toString();
    }
}
