/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database.tables.records;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;

import javax.annotation.*;

import jhi.gatekeeper.server.database.tables.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabaseVersionRecord extends TableRecordImpl<DatabaseVersionRecord> implements Record2<Integer, Timestamp> {

    private static final long serialVersionUID = -2002060393;

    /**
     * Setter for <code>germinate_gatekeeper.database_version.version</code>. The version number of this database. Incrementing starting from '1'.
     */
    public void setVersion(Integer value) {
        set(0, value);
    }

    /**
     * Create a detached DatabaseVersionRecord
     */
    public DatabaseVersionRecord() {
        super(DatabaseVersion.DATABASE_VERSION);
    }

    /**
     * Setter for <code>germinate_gatekeeper.database_version.updated_on</code>. The timestamp of the last update.
     */
    public void setUpdatedOn(Timestamp value) {
        set(1, value);
    }

    /**
     * Create a detached, initialised DatabaseVersionRecord
     */
    public DatabaseVersionRecord(Integer version, Timestamp updatedOn) {
        super(DatabaseVersion.DATABASE_VERSION);

        set(0, version);
        set(1, updatedOn);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Timestamp> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Timestamp> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DatabaseVersion.DATABASE_VERSION.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return DatabaseVersion.DATABASE_VERSION.UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatabaseVersionRecord value1(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatabaseVersionRecord value2(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatabaseVersionRecord values(Integer value1, Timestamp value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>germinate_gatekeeper.database_version.version</code>. The version number of this database. Incrementing starting from '1'.
     */
    public Integer getVersion() {
        return (Integer) get(0);
    }

    /**
     * Getter for <code>germinate_gatekeeper.database_version.updated_on</code>. The timestamp of the last update.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(1);
    }
}
