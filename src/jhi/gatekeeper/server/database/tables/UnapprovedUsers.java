/*
 * This file is generated by jOOQ.
 */
package jhi.gatekeeper.server.database.tables;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;
import java.util.*;

import javax.annotation.*;

import jhi.gatekeeper.server.database.*;
import jhi.gatekeeper.server.database.tables.records.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnapprovedUsers extends TableImpl<UnapprovedUsersRecord> {

    /**
     * The reference instance of <code>germinate_gatekeeper.unapproved_users</code>
     */
    public static final UnapprovedUsers UNAPPROVED_USERS = new UnapprovedUsers();
    private static final long serialVersionUID = 869364206;
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.id</code>.
     */
    public final TableField<UnapprovedUsersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.user_username</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> USER_USERNAME = createField("user_username", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.user_password</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> USER_PASSWORD = createField("user_password", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.user_full_name</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> USER_FULL_NAME = createField("user_full_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.user_email_address</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> USER_EMAIL_ADDRESS = createField("user_email_address", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.institution_id</code>.
     */
    public final TableField<UnapprovedUsersRecord, Integer> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.institution_name</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> INSTITUTION_NAME = createField("institution_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.institution_acronym</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> INSTITUTION_ACRONYM = createField("institution_acronym", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.institution_address</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> INSTITUTION_ADDRESS = createField("institution_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.database_system_id</code>.
     */
    public final TableField<UnapprovedUsersRecord, Integer> DATABASE_SYSTEM_ID = createField("database_system_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.created_on</code>.
     */
    public final TableField<UnapprovedUsersRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.has_been_rejected</code>.
     */
    public final TableField<UnapprovedUsersRecord, Byte> HAS_BEEN_REJECTED = createField("has_been_rejected", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.needs_approval</code>.
     */
    public final TableField<UnapprovedUsersRecord, Byte> NEEDS_APPROVAL = createField("needs_approval", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");
    /**
     * The column <code>germinate_gatekeeper.unapproved_users.activation_key</code>.
     */
    public final TableField<UnapprovedUsersRecord, String> ACTIVATION_KEY = createField("activation_key", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>germinate_gatekeeper.unapproved_users</code> table reference
     */
    public UnapprovedUsers() {
        this(DSL.name("unapproved_users"), null);
    }

    /**
     * Create an aliased <code>germinate_gatekeeper.unapproved_users</code> table reference
     */
    public UnapprovedUsers(String alias) {
        this(DSL.name(alias), UNAPPROVED_USERS);
    }

    /**
     * Create an aliased <code>germinate_gatekeeper.unapproved_users</code> table reference
     */
    public UnapprovedUsers(Name alias) {
        this(alias, UNAPPROVED_USERS);
    }

    private UnapprovedUsers(Name alias, Table<UnapprovedUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private UnapprovedUsers(Name alias, Table<UnapprovedUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UnapprovedUsers(Table<O> child, ForeignKey<O, UnapprovedUsersRecord> key) {
        super(child, key, UNAPPROVED_USERS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UnapprovedUsersRecord> getRecordType() {
        return UnapprovedUsersRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateGatekeeper.GERMINATE_GATEKEEPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UNAPPROVED_USERS_PRIMARY, Indexes.UNAPPROVED_USERS_UNAPPROVED_USERS_IBFK_1, Indexes.UNAPPROVED_USERS_UNAPPROVED_USERS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UnapprovedUsersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_UNAPPROVED_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UnapprovedUsersRecord> getPrimaryKey() {
        return Keys.KEY_UNAPPROVED_USERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UnapprovedUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<UnapprovedUsersRecord>>asList(Keys.KEY_UNAPPROVED_USERS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UnapprovedUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UnapprovedUsersRecord, ?>>asList(Keys.UNAPPROVED_USERS_IBFK_1, Keys.UNAPPROVED_USERS_IBFK_2);
    }

    public Institutions institutions() {
        return new Institutions(this, Keys.UNAPPROVED_USERS_IBFK_1);
    }

    public DatabaseSystems databaseSystems() {
        return new DatabaseSystems(this, Keys.UNAPPROVED_USERS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnapprovedUsers as(String alias) {
        return new UnapprovedUsers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnapprovedUsers as(Name alias) {
        return new UnapprovedUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UnapprovedUsers rename(String name) {
        return new UnapprovedUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UnapprovedUsers rename(Name name) {
        return new UnapprovedUsers(name, null);
    }
}
